kernel:
  image: linuxkit/kernel:4.9.125-4ffac525e6a57ccc3f2a8ae0fb96f12169027759-amd64
  cmdline: console=ttyS0 page_poison=1 vsyscall=emulate panic=1
init:
- linuxkit/init:3f1e5c32d6ca9e83a7ea7ad9854da2032971a83f
- linuxkit/runc:v0.6
- linuxkit/containerd:v0.6
- linuxkit/ca-certificates:v0.6
- linuxkit/getty:v0.6
- linuxkit/memlogd:ba4fcf55c35a3833546a1e39125bf0fa940327b0
#- docker/desktop-host-tools:eaf083a216e4ce16ea23ff7ec764ccde92ae0ea584c809fba1d22c491afa5795
- djs55/vpnkit-expose-port:aa7ecb2c296c6ba397961b4c86ae1a718bc17ba2
onboot:
- name: metadata
  image: linuxkit/metadata:v0.6
  command:
  - /usr/bin/metadata
  - cdrom
- name: sysfs
  image: linuxkit/sysfs:v0.6
- name: binfmt
  #image: docker/binfmt:eaf083a216e4ce16ea23ff7ec764ccde92ae0ea584c809fba1d22c491afa5795
  image: linuxkit/binfmt:v0.6
- name: sysctl
  image: linuxkit/sysctl:v0.6
  binds:
  - /etc/sysctl.d/01-ipv4.ip_forward.conf:/etc/sysctl.d/01-ipv4.ip_forward.conf
  - /etc/sysctl.d/02-pid_max.conf:/etc/sysctl.d/02-pid_max.conf
  readonly: false
- name: format
  image: linuxkit/format:v0.6
- name: extend
  image: linuxkit/extend:v0.6
- name: mount
  image: linuxkit/mount:v0.6
  command:
  - /usr/bin/mountie
  - /var/lib
- name: swap
  image: linuxkit/swap:v0.6
  binds:
  - /var:/var
  - /dev:/dev
  - /run:/run
  command:
  - sh
  - -c
  - /swap.sh --path /var/lib/swap --size $(cat /run/config/swap/size)
- name: move-logs
  image: alpine:3.9
  binds:
  - /var:/host_var
  command:
  - sh
  - -c
  - |
    set -xv
    # During the onboot phase, `/host_var/log` exists but it empty because we haven't
    # started containerd yet. We move it to `/host_var/lib` unless there's already a
    # directory full of logs there, in which case we keep them and `rmdir` the empty
    # directory.
    if [ ! -L /host_var/log ] && [ -d /host_var/log ]; then
      if [ ! -e /host_var/lib/log ]; then
        mv /host_var/log /host_var/lib
      else
        rmdir /host_var/log
      fi
      # containerd will log to /host_var/log which we want to store on the disk, not
      # on tmpfs.
      ln -s /var/lib/log /host_var/log
    fi
    # Remove old logs (which haven't been rotated)
    rm -f /host_var/lib/log/*.err.log
- name: mount-docker
  image: alpine:3.9
  capabilities:
  - CAP_SYS_ADMIN
  binds:
  - /containers:/containers:rshared,rbind
  - /dev/sr2:/dev/sr2
  command:
  - sh
  - -c
  - |
    set -xv
    # /mnt and /containers/services/docker must already exist: filesystem is readonly
    mount /dev/sr2 /mnt
    mount --make-shared /mnt
    mount --bind /mnt/containers/services/docker /containers/services/docker
  rootfsPropagation: shared
- name: mount-kube-images
  image: alpine:3.9
  capabilities:
  - CAP_SYS_ADMIN
  binds:
  - /etc/kube-images:/etc/kube-images:rshared,rbind
  - /dev:/dev
  command:
  - sh
  - -c
  - |
    set -xv
    if [ -b "/dev/sr3" ] ; then
      mount /dev/sr3 /etc/kube-images
      mount --make-shared /etc/kube-images
    fi
  rootfsPropagation: shared
- name: bridge
  image: alpine:3.9
  binds:
  - /var/lib:/var/lib
  command:
  - /bin/sh
  - -c
  - |
    set -ex
    cat <<EOF >/var/lib/cni/conf/10-default.conflist
    {
      "cniVersion": "0.3.1",
      "name": "default",
      "plugins": [
        {
          "type": "bridge",
          "bridge": "cni0",
          "isDefaultGateway": true,
          "ipMasq": true,
          "hairpinMode": true,
          "ipam": {
            "type": "host-local",
            "subnet": "10.1.0.0/16",
            "gateway": "10.1.0.1"
          },
          "dns": {
            "nameservers": ["10.1.0.1"]
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          },
          "snat": true
        }
      ]
    }
    EOF
    cat <<EOF >/var/lib/cni/conf/99-loopback.conf
    {
      "cniVersion": "0.2.0",
      "type": "loopback"
    }
    EOF
  runtime:
    mkdir:
    - /var/lib/cni/conf
- name: vpnkit-9pmount-vsock
  #image: docker/vpnkit-9pmount-vsock:6f3d10bea7a6bd1c644bf92245d6e83124f37140
  image: alpine:3.9
  capabilities:
  - CAP_NET_ADMIN
  - CAP_SYS_ADMIN
  binds:
  - /var/vpnkit/port:/port:rbind,rshared
  command: ["sh", "-c", "mkdir -p /var/vpnkit/port && mount -v -t 9p -o trans=virtio,dfltuid=1001,dfltgid=50,version=9p2000 port /port"]
  #command:
  #- /sbin/vpnkit-9pmount-vsock
  #- --vsock
  ##- "0x0000F3A5"
  #- connect
  #- port
  #- /port
  rootfsPropagation: shared
  runtime:
    mkdir:
    - /var/vpnkit/port
    - /port
- name: ip
  image: linuxkit/ip:v0.6
  binds:
  - /run/config/interfaces:/etc/network/interfaces
  - /run/config/resolv.conf:/run/config/resolv.conf
  - /etc/resolv.conf:/etc/resolv.conf
  command:
  - /bin/sh
  - -c
  - ifup eth0 && cat /run/config/resolv.conf > /etc/resolv.conf
onshutdown: []
services:
- name: acpid
  image: linuxkit/acpid:v0.6
  cgroupsPath: systemreserved/acpid
- name: write-and-rotate-logs
  image: linuxkit/logwrite:d9778c0d538094d398cf0cbfc89277aeca67f1be
  command:
  - /usr/bin/logwrite
  - -max-log-files
  - "8"
  - -max-log-size
  - "10485760"
- name: kmsg
  image: linuxkit/kmsg:cf3dc833591838596427aac032c829ea592599d0
- name: docker
  image: alpine:3.9
  command:
  - /bin/sh
  - -c
  - echo The Docker service will be started here
  cgroupsPath: podruntime/docker
- name: trim-after-delete
  image: linuxkit/trim-after-delete:v0.6
  binds:
  - /run/desktop:/var/run
  - /var/lib/docker:/var/lib/docker
  cgroupsPath: systemreserved/trim-after-delete
  runtime:
    mkdir:
    - /var/lib/docker
    - /run/desktop
#- name: socks
  #image: docker/socks:eaf083a216e4ce16ea23ff7ec764ccde92ae0ea584c809fba1d22c491afa5795
  #cgroupsPath: systemreserved/socks
#- name: diagnose
  #image: docker/diagnosticsd:eaf083a216e4ce16ea23ff7ec764ccde92ae0ea584c809fba1d22c491afa5795
  #command:
  #- /usr/local/bin/diagnosticsd
  #- -port
  #- "62374"
  #cgroupsPath: systemreserved/diagnose
- name: vpnkit-forwarder
  #image: docker/vpnkit-forwarder:910b836ce0e9334265b677c4586068b53f379043
  image: linuxkit/vpnkit-forwarder:v0.6
  binds:
  - /run/desktop:/run/desktop
  - /run/lifecycle-server:/run/lifecycle-server
  command:
  - /vpnkit-forwarder
  - -port
  - "62373"
  net: host
  cgroupsPath: systemreserved/vpnkit-forwarder
  runtime:
    mkdir:
    - /run/desktop
    - /run/lifecycle-server
- name: sntpc
  image: linuxkit/openntpd:v0.6
  #image: docker/sntpc:eaf083a216e4ce16ea23ff7ec764ccde92ae0ea584c809fba1d22c491afa5795
  binds:
  - /run/config/resolv.conf:/etc/resolv.conf
  cgroupsPath: systemreserved/ntpd
- name: host-timesync-daemon
  image: linuxkit/host-timesync-daemon:v0.6
  cgroupsPath: systemreserved/host-timesync-daemon
- name: docker-fakece
  image: docker-fakece:1.0
  capabilities:
      - CAP_SYS_ADMIN
  binds:
      - /dev/fuse:/dev/fuse
  #command: [ "/usr/bin/entrypoint.sh"]

files:
- path: /etc/hostname
  directory: false
  contents: docker-desktop
  optional: false
- path: /etc/linuxkit.yml
  directory: false
  metadata: yaml
  optional: false
- path: /etc/sysctl.d/01-ipv4.ip_forward.conf
  directory: false
  contents: net.ipv4.ip_forward = 1
  optional: false
- path: /etc/sysctl.d/02-pid_max.conf
  directory: false
  contents: kernel.pid_max = 99999
  optional: false
- path: /etc/kubernetes
  directory: false
  symlink: /var/lib/kubeadm
  optional: false
- path: /usr/libexec/kubernetes/kubelet-plugins
  directory: false
  symlink: /var/lib/kubelet-plugins
  optional: false
- path: /opt/cni/bin
  directory: true
  optional: false
- path: /etc/cni/net.d
  directory: true
  optional: false
- path: /etc/kube-images
  directory: true
  optional: false
- path: /etc/os-release
  directory: false
  contents: |
    PRETTY_NAME="Docker Desktop"
  optional: false
